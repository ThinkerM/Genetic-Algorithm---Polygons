<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Polygons</name>
    </assembly>
    <members>
        <member name="T:Polygons.GA.FitnessCalculators.BasicSymmetryFitnessCalculator">
            <summary>
            For every <see cref="T:Polygons.GA.IPolygonGene"/>, finds its closest Y axis mirrored relative and decreases fitness based on the distance difference from an ideal relative's position
            </summary>
        </member>
        <member name="T:Polygons.GA.FitnessCalculators.CalculatorRetriever">
            <summary>
            Provides a centralised access to fitness calculators intended for <see cref="T:Polygons.GA.PolygonIndividual"/>s
            </summary>
        </member>
        <member name="T:Polygons.GA.FitnessCalculators.SymmetryIntersectionPenaltyFitnessCalculator">
            <summary>
            <seealso cref="T:Polygons.GA.FitnessCalculators.BasicSymmetryFitnessCalculator"/>
            Additonally reduces fitness for every intersecting edge pair in the polygon
            </summary>
        </member>
        <member name="T:Polygons.GA.IPolygonGene">
            <summary>
            Gene which can be included in a <see cref="T:Polygons.GA.PolygonIndividual"/>'s genome
            </summary>
        </member>
        <member name="P:Polygons.GA.IPolygonGene.X">
            <summary>
            X coordinate of the gene's encoded point
            </summary>
        </member>
        <member name="P:Polygons.GA.IPolygonGene.Y">
            <summary>
            Y coordinate of the gene's encoded point
            </summary>
        </member>
        <member name="P:Polygons.GA.IPolygonGene.DistanceFromCentroid">
            <summary>
            Distance between the point encoded by the gene and the whole individual's (polygon's) centroid
            </summary>
        </member>
        <member name="P:Polygons.GA.IPolygonGene.AngleRelativeToCentroid">
            <summary>
            Represents angle on a circle relative to whole individual's centroid.
            0° to the right, 90° up, 180° left, 270° down
            </summary>
        </member>
        <member name="M:Polygons.GA.IPolygonGene.UpdateAngularRepresentation(System.Drawing.Point)">
            <summary>
            Rebuild DistanceFromCentroid and AngleRelativeToCentroid properties based on a new centroid point and current X,Y coordinates
            </summary>
            <param name="centroid">New centroid to update according to</param>
        </member>
        <member name="T:Polygons.GA.PolygonAdapter">
            <summary>
            <see cref="T:Genetic_Algorithm.GA.Generics.GeneticAlgorithmAdapter`2"/> which contains the logic for crossover of the <see cref="T:Polygons.GA.PolygonIndividual"/>s
            </summary>
        </member>
        <member name="T:Polygons.GA.PolygonIndividual">
            <summary>
            <see cref="T:Genetic_Algorithm.GA.Generics.IIndividual`1"/> which introduces the structure of <see cref="T:Polygons.IPolygon"/> into a genetic algorithm
            </summary>
        </member>
        <member name="T:Polygons.GA.SimplePolygonGene">
            <summary>
            Represents genetic information about one vertex of a polygon
            </summary>
        </member>
        <member name="P:Polygons.GA.SimplePolygonGene.AngleRelativeToCentroid">
            <summary>
            Represents angle on a circle relative to whole individual's centroid.
            0° to the right, 90° up, 180° left, 270° down
            </summary>
        </member>
        <member name="T:Polygons.Forms.DialogForms.IndividualsOfVertexCountPair">
            <summary>
            Structure used to transfer constructor data to <see cref="T:Polygons.Forms.DialogForms.ChooseVerticesCountToImportDialog"/>.
            <para>Holds information about a group of polygon individuals - the group's vertex count and number of individuals in the group.</para>
            </summary>
        </member>
        <member name="T:Polygons.Forms.DialogForms.ChooseVerticesCountToImportDialog">
            <summary>
            Helper dialog form used to select a single group of individuals with a uniform vertex count
            </summary>
        </member>
        <member name="M:Polygons.Forms.DialogForms.ChooseVerticesCountToImportDialog.#ctor(System.Collections.Generic.List{Polygons.Forms.DialogForms.IndividualsOfVertexCountPair})">
            <summary>
            Creates a dialog window asking the user to select one of multiple groups
            </summary>
            <param name="possibleCountPairs">All possible groups to be chosen from</param>
        </member>
        <member name="P:Polygons.Forms.DialogForms.ChooseVerticesCountToImportDialog.ChosenVertexCount">
            <summary>
            Return value of the dialog
            </summary>
        </member>
        <member name="F:Polygons.Forms.DialogForms.ChooseVerticesCountToImportDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.DialogForms.ChooseVerticesCountToImportDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.DialogForms.ChooseVerticesCountToImportDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Polygons.Forms.CrossroadForm">
            <summary>
            Serves as a central form for the genetic algorithm - grants access to every important component of the application.
            Only one instance of this form can be run at once.
            </summary>
        </member>
        <member name="P:Polygons.Forms.CrossroadForm.Instance">
            <summary>
            Access an instance of CrossroadForm
            </summary>
        </member>
        <member name="F:Polygons.Forms.CrossroadForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.CrossroadForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.CrossroadForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Polygons.Forms.CustomControls.GaComponentIcon.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.CustomControls.GaComponentIcon.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.CustomControls.GaComponentIcon.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Polygons.Forms.CustomControls.LabeledPolygonImage">
            <summary>
            Control containing a picture of a polygon, an optional description tag and a selection checkbox which appears when mouse-hovered over
            </summary>
        </member>
        <member name="P:Polygons.Forms.CustomControls.LabeledPolygonImage.SavedPolygon">
            <summary>
            Polygon assigned to the image
            </summary>
        </member>
        <member name="M:Polygons.Forms.CustomControls.LabeledPolygonImage.#ctor(Polygons.Polygon,System.String,System.Boolean)">
            <summary>
            Control containing a picturebox for a polygon picture, a selection checkbox and a custom description label
            </summary>
            <param name="assignedPolygon">Polygon to draw in a picturebox</param>
            <param name="description">Optional description tag to inclue with the picture</param>
            <param name="enableSelectionCheckbox">Whether selection checkbox should become functional (and visible)</param>
        </member>
        <member name="P:Polygons.Forms.CustomControls.LabeledPolygonImage.ImageHeight">
            <summary>
            Height of the image part of the control
            </summary>
        </member>
        <member name="P:Polygons.Forms.CustomControls.LabeledPolygonImage.ImageWidth">
            <summary>
            Width of the image part of the control
            </summary>
        </member>
        <member name="P:Polygons.Forms.CustomControls.LabeledPolygonImage.PictureBox">
            <summary>
            Handle of the picturebox of the control
            </summary>
        </member>
        <member name="P:Polygons.Forms.CustomControls.LabeledPolygonImage.Selected">
            <summary>
            Indicates whether the control's selection box is checked
            </summary>
        </member>
        <member name="M:Polygons.Forms.CustomControls.LabeledPolygonImage.Select">
            <summary>
            Change state of SelectionCheckbox to true
            </summary>
        </member>
        <member name="M:Polygons.Forms.CustomControls.LabeledPolygonImage.Deselect">
            <summary>
            Change state of SelectionCheckbox to false
            </summary>
        </member>
        <member name="P:Polygons.Forms.CustomControls.LabeledPolygonImage.Description">
            <summary>
            Optional description tag of the image
            </summary>
        </member>
        <member name="M:Polygons.Forms.CustomControls.LabeledPolygonImage.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Redraw the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Polygons.Forms.CustomControls.LabeledPolygonImage.LabeledImageMouseRightClicked">
            <summary>
            Mouse right-click occured anywhere on the control
            </summary>
        </member>
        <member name="M:Polygons.Forms.CustomControls.LabeledPolygonImage.OnRightMouseClicked(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Right mouse-click occured
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Polygons.Forms.CustomControls.LabeledPolygonImage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.CustomControls.LabeledPolygonImage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.CustomControls.LabeledPolygonImage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Polygons.Forms.HelperForms.DeleteFileConfirmation.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.HelperForms.DeleteFileConfirmation.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.HelperForms.DeleteFileConfirmation.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Polygons.Forms.HelperForms.ShapeNameChooserPrompt">
            <summary>
            Dialog box asking the user to specify a name for a polygon
            </summary>
        </member>
        <member name="F:Polygons.Forms.HelperForms.ShapeNameChooserPrompt.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.HelperForms.ShapeNameChooserPrompt.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.HelperForms.ShapeNameChooserPrompt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Polygons.Forms.HelperForms.ShapeOverwritePromptForm">
            <summary>
            Dialog box asking the user to confirm overwriting an existing file
            </summary>
        </member>
        <member name="F:Polygons.Forms.HelperForms.ShapeOverwritePromptForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.HelperForms.ShapeOverwritePromptForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.HelperForms.ShapeOverwritePromptForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Polygons.Forms.GaViewerForm">
            <summary>
            Visualization and customization of a Genetic algorithm with Polygons.
            </summary>
            <remarks>
            Provides following features (among others):
            <list type="bullet">
                <item><description>Import previously created individuals into a GA's initial population</description></item>
                <item><description>Modify parameters of the genetic algorithm</description></item>
                <item><description>Change frequency of generations in the GA to be viewed</description></item>
                <item><description>Change frequency of generations to be saved during the run of the GA</description></item>
                <item><description>View generated populations and change basic properties of the images</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Polygons.Forms.GaViewerForm.#ctor(System.Collections.Generic.IEnumerable{Genetic_Algorithm.GA.Generics.IFitnessCalculator{Polygons.GA.PolygonIndividual,Polygons.GA.IPolygonGene}})">
            <summary>
            Creates an instance of a form for visualizing and customizing the run of a Genetic algorithm for Polygons
            </summary>
            <param name="availableFitnessCalculators">All Fitness calculators which the form can load into its options</param>
        </member>
        <member name="M:Polygons.Forms.GaViewerForm.OnGaGenerationComplete(Genetic_Algorithm.GA.Generics.GaEventArgs{Polygons.GA.PolygonIndividual,Polygons.GA.IPolygonGene})">
            <summary>
            Process the event of a generation being finished from the underlying <see cref="T:Genetic_Algorithm.GA.Generics.GeneticAlgorithm`2"/> 
            </summary>
            <param name="e"><see cref="T:Genetic_Algorithm.GA.Generics.GaEventArgs`2"/> holding information about the finished generation</param>
        </member>
        <member name="M:Polygons.Forms.GaViewerForm.OnGaInitialised(Genetic_Algorithm.GA.Generics.GaEventArgs{Polygons.GA.PolygonIndividual,Polygons.GA.IPolygonGene})">
            <summary>
            Process the event of the underlying <see cref="T:Genetic_Algorithm.GA.Generics.GaEventArgs`2"/> having been initialised
            </summary>
            <param name="e"><see cref="T:Genetic_Algorithm.GA.Generics.GaEventArgs`2"/> holding information about the initial generation</param>
        </member>
        <member name="M:Polygons.Forms.GaViewerForm.ResolveDisplayedVertexCount">
            <summary>
            Evaluates number of vertices of display population,
            current vertex count value specified in settings and adjusts either of them based on user's decision
            </summary>
            <remarks>
            <list type="bullet">   
                <item><see cref="F:System.Windows.Forms.DialogResult.Yes"/> to remove displayed population</item>
                <item><see cref="F:System.Windows.Forms.DialogResult.No"/> to keep current displayed population and change settings</item>
            </list>
            </remarks>
        </member>
        <member name="M:Polygons.Forms.GaViewerForm.ResolveDisplayedPopulationUniformity">
            <summary>
            Evaluates all sets of different vertex counts in current display population and ensures that only a single set of the same vertex count remains
            </summary>
        </member>
        <member name="M:Polygons.Forms.GaViewerForm.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Safely close form on ESC press
            </summary>
            <param name="keyData"></param>
            <returns>True to close form, False otherwise</returns>
        </member>
        <member name="F:Polygons.Forms.GaViewerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.GaViewerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.GaViewerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Polygons.Forms.PopulationGeneratorForm">
            <summary>
            Management of multiple Genetic algorithm polygon individuals
            </summary>
            <remarks>
            Provides following features (among others):
            <list type="bullet">
                <item><description>Import previously created shapes</description></item>
                <item><description>Manage saved shapes in larger quantities</description></item>
                <item><description>Sort viewed images by their fitness</description></item>
                <item><description>Change basic properties of the images</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Polygons.Forms.PopulationGeneratorForm.#ctor">
            <summary>
            Creates a population management form for Genetic algorithm
            </summary>
        </member>
        <member name="M:Polygons.Forms.PopulationGeneratorForm.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Safely close form on ESC press
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="F:Polygons.Forms.PopulationGeneratorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.PopulationGeneratorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.PopulationGeneratorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Polygons.Forms.PolygonCreationForm">
            <summary>
            Form allowing user to specify and modify a custom shape
            </summary>
            <remarks>
            Provides following features (among others):
            <list type="bullet">
                <item><description>Define the shape of a polygon</description></item>
                <item><description>Rename created shapes</description></item>
                <item><description>Change color of a shape</description></item>
                <item><description>Limited file management of shapes</description></item>
            </list>
            </remarks>
            <summary>
            Form allowing user to specify and modify a custom shape
            </summary>
        </member>
        <member name="M:Polygons.Forms.PolygonCreationForm.#ctor">
            <summary>
            Form allowing user to specify and modify a custom shape
            </summary>
        </member>
        <member name="M:Polygons.Forms.PolygonCreationForm.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Safely close form on ESC press
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="P:Polygons.Forms.PolygonCreationForm.ShapeName">
            <summary>
            Name of the shape being currently edited
            </summary>
        </member>
        <member name="F:Polygons.Forms.PolygonCreationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.PolygonCreationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.PolygonCreationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Polygons.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Polygons.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Polygons.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Polygons.Properties.Resources.croppedEvolution">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Polygons.Properties.Resources.multiplePolygons">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Polygons.Properties.Resources.singlePolygon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Polygons.Paths">
            <summary>
            Provides methods for determining paths to various relevant locations and creating appropriate paths for specific files
            </summary>
        </member>
        <member name="M:Polygons.Paths.PolygonSavedShapesFolder">
            <summary>
            Folder where saved polygons are stored
            </summary>
            <returns>Path to save folder for polygons</returns>
        </member>
        <member name="M:Polygons.Paths.PolygonSavedShapesFolderNoBacklash">
            <summary>
            Folder where saved polygons are stored, final directory separator omitted
            </summary>
            <returns>Path to save folder for polygons without final directory separator</returns>
        </member>
        <member name="M:Polygons.Paths.LocalPath(System.String)">
            <summary>
            Local-path representation of a uriPath
            </summary>
            <param name="uriPath">uriPath to construct local path from</param>
            <returns>Local-path representation of uriPath</returns>
        </member>
        <member name="M:Polygons.Paths.SaveXmlPath(System.String)">
            <summary>
            Whole path to a file with a given name
            </summary>
            <param name="fileName">Name of the file to construct a path to</param>
            <returns></returns>
        </member>
        <member name="T:Polygons.PolygonGenerator">
            <summary>
            Provides static methods for generation of polygons
            </summary>
        </member>
        <member name="M:Polygons.PolygonGenerator.RandomPolygon">
            <summary>
            Generate a random polygon with a random number of vertices
            </summary>
            <returns>Random polygon</returns>
        </member>
        <member name="M:Polygons.PolygonGenerator.RandomPolygon(System.Int32)">
            <summary>
            Generate a random polygon with the specified number of vertices
            </summary>
            <param name="verticesCount">Number of vertices of the result polygon</param>
            <returns>Random polygon with 'n' vertices</returns>
        </member>
        <member name="T:Polygons.IPolygon">
            <summary>
            Represents a shape with a variable number of vertices, specific color and an optional name
            </summary>
        </member>
        <member name="P:Polygons.IPolygon.VerticesCount">
            <summary>
            Number of vertices
            </summary>
        </member>
        <member name="P:Polygons.IPolygon.OutlineColor">
            <summary>
            Color of the lines connecting vertices
            </summary>
        </member>
        <member name="P:Polygons.IPolygon.Vertices">
            <summary>
            List representation of the polygon's vertices
            </summary>
        </member>
        <member name="P:Polygons.IPolygon.Center">
            <summary>
            Point which is the average of the polygon's left/right-most and top/lower-most vertices
            </summary>
        </member>
        <member name="P:Polygons.IPolygon.Centroid">
            <summary>
            Point which is the average of every vertex's coordinates
            </summary>
        </member>
        <member name="T:Polygons.PolygonVisualizer">
            <summary>
            Provides static methods for drawing polygons
            </summary>
        </member>
        <member name="M:Polygons.PolygonVisualizer.Draw(Polygons.IPolygon,System.Drawing.Graphics)">
            <summary>
            Draw a complete polygon
            </summary>
            <param name="p"><see cref="T:Polygons.IPolygon"/> to draw</param>
            <param name="g"><see cref="T:System.Drawing.Graphics"/> object to be used to draw the polygon</param>
        </member>
        <member name="M:Polygons.PolygonVisualizer.DrawIncomplete(Polygons.IPolygon,System.Drawing.Graphics)">
            <summary>
            Draw polygon without connection between the first and last vertex of the polygon
            </summary>
            <param name="p"><see cref="T:Polygons.IPolygon"/> to incompletely draw</param>
            <param name="g"><see cref="T:System.Drawing.Graphics"/> object to be used to draw the polygon</param>
        </member>
        <member name="M:Polygons.PolygonVisualizer.DrawCenter(Polygons.IPolygon,System.Drawing.Graphics)">
            <summary>
            Draw a mark in the position of the polygon's center
            </summary>
            <param name="p"><see cref="T:Polygons.IPolygon"/> whose center to draw</param>
            <param name="g"><see cref="T:System.Drawing.Graphics"/> object to be used to mark the center</param>
        </member>
        <member name="M:Polygons.PolygonVisualizer.DrawCentroid(Polygons.IPolygon,System.Drawing.Graphics)">
            <summary>
            Draw a mark in the position of the polygon's centroid
            </summary>
            <param name="p"><see cref="T:Polygons.IPolygon"/> whose center to draw</param>
            <param name="g"><see cref="T:System.Drawing.Graphics"/> object to be used to mark the center</param>
        </member>
        <member name="M:Polygons.PolygonVisualizer.PolygonNormalizedToBox(Polygons.Polygon,System.Windows.Forms.PictureBox)">
            <summary>
            Create a new polygon with the properties of its template, vertices coordinates scaled to fit a PictureBox
            </summary>
            <param name="p"><see cref="T:Polygons.Polygon"/> to normalize</param>
            <param name="normalizeTo"><see cref="T:System.Windows.Forms.PictureBox"/> whose bounds should be used for normalization calculations</param>
            <returns></returns>
        </member>
        <member name="M:Polygons.PolygonVisualizer.PolygonNormalizedToBox(Polygons.Polygon,System.Int32,System.Int32)">
            <summary>
            Create a new <see cref="T:Polygons.Polygon"/> with the properties of its template, vertices coordinates scaled to fit a container of specified dimensions
            </summary>
            <param name="p"><see cref="T:Polygons.Polygon"/> to normalize</param>
            <param name="width">Width of the container</param>
            <param name="height">Height of the container</param>
            <returns></returns>
        </member>
        <member name="T:Polygons.PolygonXmlHandler">
            <summary>
            Provides static methods for loading and saving Polygons from/to .xml files
            </summary>
        </member>
        <member name="M:Polygons.PolygonXmlHandler.EnableFileForWriting(System.String)">
            <summary>
            Checks if a file of same name already exists in specified location and removes any readonly accessors
            </summary>
            <param name="path">File path including the name of the potential file</param>
        </member>
        <member name="M:Polygons.PolygonXmlHandler.Save(Polygons.Polygon,System.String)">
            <summary>
            Saves polygon to an XML file to a specified folder and filename.
            </summary>
            <param name="p">Polygon to be saved</param>
            <param name="path">File path including the name of the output file</param>
        </member>
        <member name="M:Polygons.PolygonXmlHandler.SaveToDefaultFolder(Polygons.Polygon)">
            <summary>
            Save <see cref="T:Polygons.Polygon"/> as .xml to the application's default shapes saving folder
            </summary>
            <param name="p">Polygon to save</param>
        </member>
        <member name="M:Polygons.PolygonXmlHandler.Load(System.String)">
            <summary>
            Load a <see cref="T:Polygons.Polygon"/> from an XML file
            </summary>
            <param name="uriPath">Path to desired XML file</param>
            <returns>The object created from the XML file</returns>
        </member>
        <member name="T:Polygons.Polygon">
            <summary>
            Represents a shape with a variable number of vertices, specific color and an optional name
            </summary>
        </member>
        <member name="P:Polygons.Polygon.OutlineColor">
            <summary>
            Color of the connecting lines and points of the polygon
            </summary>
        </member>
        <member name="P:Polygons.Polygon.Name">
            <summary>
            Name assigned to the polygon
            </summary>
        </member>
        <member name="P:Polygons.Polygon.Vertices">
            <summary>
            All of the polygon's vertices represented as Points
            </summary>
        </member>
        <member name="P:Polygons.Polygon.VerticesCount">
            <summary>
            Number of vertices
            </summary>
        </member>
        <member name="P:Polygons.Polygon.Center">
            <summary>
            Point which is the average of the polygon's left/right-most and top/lower-most vertices
            </summary>
        </member>
        <member name="P:Polygons.Polygon.Centroid">
            <summary>
            Point which is the average of every vertex's coordinates
            </summary>
        </member>
        <member name="M:Polygons.Polygon.ShiftCenter(System.Drawing.Point)">
            <summary>
            Moves vertices of the polygon so that the specified point becomes the new center.
            </summary>
            <param name="newCenter">Location to become the new center after the shift</param>
        </member>
        <member name="M:Polygons.Polygon.ShiftedToCenter(System.Drawing.Point)">
            <summary>
            Representation of this polygon's vertices adjusted to a hypothetical center
            </summary>
            <param name="hypotheticalCenter"></param>
            <returns>List of polygon's vertices adjusted to center</returns>
        </member>
        <member name="M:Polygons.Polygon.ShiftCentroid(System.Drawing.Point)">
            <summary>
            Moves all of polygon's vertices so that they match a new centroid position
            </summary>
            <param name="newCentroid"></param>
        </member>
        <member name="M:Polygons.Polygon.ShiftedToCentroid(System.Drawing.Point)">
            <summary>
            Representation of this polygon's vertices adjusted to a hypothetical centroid
            </summary>
            <param name="hypotheticalCentroid"></param>
            <returns>List of polygon's vertices adjusted to centroid</returns>
        </member>
        <member name="M:Polygons.Polygon.ShiftUpperLeftCorner(System.Drawing.Point)">
            <summary>
            Change the coordinates of every vertex withotu distoring their relative positions.
            Left-most point of the polygon will share its X coordinate with the imaginary upper-left corner.
            Top-most point of the polygon will share its Y coordinate with the imaginary upper-left corner.
            </summary>
            <param name="shiftTo">Imaginary upper-left corner to shift to</param>
        </member>
        <member name="M:Polygons.Polygon.ShiftVertices(System.Int32,System.Int32)">
            <summary>
            Change the coordinates of every vertex without distorting their relative positions.
            </summary>
            <param name="dX">Shift on the horizontal axis</param>
            <param name="dY">Shift on the vertical axis</param>
        </member>
        <member name="M:Polygons.Polygon.ShiftedVertices(System.Collections.Generic.List{System.Drawing.Point},System.Int32,System.Int32)">
            <summary>
            Moves vertices to a new location (specified by amount of movement on X and Y axes.
            </summary>
            <param name="vertices">Vertices to be shifted</param>
            <param name="dX">Amount of movement on X axis</param>
            <param name="dY">Amount of movement on Y axis</param>
            <returns>Vertices adjusted to a new location</returns>
        </member>
        <member name="M:Polygons.Polygon.ShiftedVertices(System.Collections.Generic.List{System.Drawing.Point},System.Drawing.Point)">
            <summary>
            Moves vertices to a new location (specified by upper left corner of the whole shape).
            </summary>
            <param name="vertices">Vertices to be shifted</param>
            <param name="shiftToCorner">Upper left corner of the desired output</param>
            <returns>Vertices adjusted to a new location</returns>
        </member>
        <member name="M:Polygons.Polygon.GetScalingFactor(System.Int32,System.Int32)">
            <summary>
            Determine a proper resize value to fit polygon into a container of specified size
            </summary>
            <param name="normalizeToX">Horizontal size of container</param>
            <param name="normalizeToY">Vertical size of container</param>
            <returns></returns>
        </member>
        <member name="M:Polygons.Polygon.#ctor(System.Collections.Generic.List{System.Drawing.Point},System.Drawing.Color,System.String)">
            <summary>
            Construct polygon from a list of vertices, optionally specify its color and name
            </summary>
            <param name="vertices"></param>
            <param name="outlineColor"></param>
            <param name="name"></param>
        </member>
        <member name="M:Polygons.Polygon.Copy(Polygons.Polygon)">
            <summary>
            Create an identical copy of polygon
            </summary>
            <param name="original">Template polygon</param>
            <returns>Identical copy of original</returns>
        </member>
        <member name="M:Polygons.Polygon.#ctor(Polygons.Polygon,System.Double)">
            <summary>
            Construct polygon according to a template, adjust relative positions of vertices by a scaling factor
            </summary>
            <param name="original">Template polygon</param>
            <param name="resizeFactor"></param>
        </member>
        <member name="T:Polygons.Utils.PolygonSettingsAccessor">
            <summary>
            Serves as an intermediary to the Genetic Algorithm's GaSettings.Default
            </summary>
        </member>
    </members>
</doc>
