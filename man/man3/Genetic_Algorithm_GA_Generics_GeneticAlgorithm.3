.TH "Genetic_Algorithm.GA.Generics.GeneticAlgorithm< TIndividual, TGene >" 3 "Sat Sep 16 2017" "Version 1.1.2" "PolyGenetic Algorithm" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Genetic_Algorithm.GA.Generics.GeneticAlgorithm< TIndividual, TGene > \- Main driver class to handle logic of the genetic algorithm  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGeneticAlgorithm\fP (\fBIGeneticAlgorithmAdapter\fP< TIndividual, TGene > \fBadapter\fP, int desiredSize)"
.br
.RI "Creates an instance of \fBGA\fP with a random initial population sample "
.ti -1c
.RI "\fBGeneticAlgorithm\fP (\fBIGeneticAlgorithmAdapter\fP< TIndividual, TGene > \fBadapter\fP, ICollection< TIndividual > include, int desiredSize)"
.br
.RI "Creates an instance of \fBGA\fP whose initial population contains certain individuals (+ additional random individuals if desired population size is larger than number of defined ones) "
.ti -1c
.RI "void \fBRunGenerations\fP (int n)"
.br
.RI "Perform necessary logic on a specified number of generations, then pause "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBOnGenerationComplete\fP (\fBGaEventArgs\fP< TIndividual, TGene > ge)"
.br
.RI "Invokes the \fBGenerationComplete\fP event "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBPopulation\fP< TIndividual, TGene > \fBinitialPopulation\fP"
.br
.ti -1c
.RI "\fBPopulation\fP< TIndividual, TGene > \fBcurrentGeneration\fP"
.br
.ti -1c
.RI "\fBPopulation\fP< TIndividual, TGene > \fBnextGeneration\fP"
.br
.ti -1c
.RI "\fBIGeneticAlgorithmAdapter\fP< TIndividual, TGene > \fBadapter\fP"
.br
.RI "Handles logic of breeding, selecting, mutating, etc\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBPopulation\fP< TIndividual, TGene > \fBInitialPopulation\fP\fC [get]\fP"
.br
.ti -1c
.RI "GenerationCompleteEventHandler< TIndividual, TGene > \fBGenerationComplete\fP"
.br
.in -1c
.SS "Events"

.in +1c
.ti -1c
.RI "static GaInitialisedEventHandler< TIndividual, TGene > \fBInitialised\fP"
.br
.RI "Raised when a \fBGeneticAlgorithm<TIndividual, TGene>\fP finishes its construction and initialisation "
.in -1c
.SH "Detailed Description"
.PP 
Main driver class to handle logic of the genetic algorithm 


.PP
\fBTemplate Parameters:\fP
.RS 4
\fITIndividual\fP 
.br
\fITGene\fP 
.RE
.PP

.PP
\fBType Constraints\fP
.TP
\fITIndividual\fP : \fI\fBIIndividual\fP<TGene>\fP
.TP
\fITIndividual\fP : \fInew()\fP
.TP
\fITGene\fP : \fI\fBIGene\fP\fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBGenetic_Algorithm\&.GA\&.Generics\&.GeneticAlgorithm\fP< TIndividual, TGene >\&.\fBGeneticAlgorithm\fP (\fBIGeneticAlgorithmAdapter\fP< TIndividual, TGene > adapter, int desiredSize)"

.PP
Creates an instance of \fBGA\fP with a random initial population sample 
.PP
\fBParameters:\fP
.RS 4
\fIadapter\fP \fBGA\fP Adapter to be used by the algorithm
.br
\fIdesiredSize\fP 
.RE
.PP

.SS "\fBGenetic_Algorithm\&.GA\&.Generics\&.GeneticAlgorithm\fP< TIndividual, TGene >\&.\fBGeneticAlgorithm\fP (\fBIGeneticAlgorithmAdapter\fP< TIndividual, TGene > adapter, ICollection< TIndividual > include, int desiredSize)"

.PP
Creates an instance of \fBGA\fP whose initial population contains certain individuals (+ additional random individuals if desired population size is larger than number of defined ones) 
.PP
\fBParameters:\fP
.RS 4
\fIadapter\fP \fBGA\fP Adapter to be used by the algorithm
.br
\fIinclude\fP Set of individuals to be included in the initial population
.br
\fIdesiredSize\fP 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "virtual void \fBGenetic_Algorithm\&.GA\&.Generics\&.GeneticAlgorithm\fP< TIndividual, TGene >\&.OnGenerationComplete (\fBGaEventArgs\fP< TIndividual, TGene > ge)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Invokes the \fBGenerationComplete\fP event 
.PP
\fBParameters:\fP
.RS 4
\fIge\fP Information about the event population
.RE
.PP

.SS "void \fBGenetic_Algorithm\&.GA\&.Generics\&.GeneticAlgorithm\fP< TIndividual, TGene >\&.RunGenerations (int n)"

.PP
Perform necessary logic on a specified number of generations, then pause 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP Number of generations to run
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "\fBIGeneticAlgorithmAdapter\fP<TIndividual, TGene> \fBGenetic_Algorithm\&.GA\&.Generics\&.GeneticAlgorithm\fP< TIndividual, TGene >\&.adapter\fC [protected]\fP"

.PP
Handles logic of breeding, selecting, mutating, etc\&. 
.SS "\fBPopulation\fP<TIndividual, TGene> \fBGenetic_Algorithm\&.GA\&.Generics\&.GeneticAlgorithm\fP< TIndividual, TGene >\&.currentGeneration\fC [protected]\fP"

.SS "\fBPopulation\fP<TIndividual, TGene> \fBGenetic_Algorithm\&.GA\&.Generics\&.GeneticAlgorithm\fP< TIndividual, TGene >\&.initialPopulation\fC [protected]\fP"

.SS "\fBPopulation\fP<TIndividual, TGene> \fBGenetic_Algorithm\&.GA\&.Generics\&.GeneticAlgorithm\fP< TIndividual, TGene >\&.nextGeneration\fC [protected]\fP"

.SH "Property Documentation"
.PP 
.SS "GenerationCompleteEventHandler<TIndividual, TGene> \fBGenetic_Algorithm\&.GA\&.Generics\&.GeneticAlgorithm\fP< TIndividual, TGene >\&.GenerationComplete\fC [add]\fP, \fC [remove]\fP"

.SS "\fBPopulation\fP<TIndividual, TGene> \fBGenetic_Algorithm\&.GA\&.Generics\&.GeneticAlgorithm\fP< TIndividual, TGene >\&.InitialPopulation\fC [get]\fP"

.SH "Event Documentation"
.PP 
.SS "GaInitialisedEventHandler<TIndividual,TGene> \fBGenetic_Algorithm\&.GA\&.Generics\&.GeneticAlgorithm\fP< TIndividual, TGene >\&.Initialised\fC [static]\fP"

.PP
Raised when a \fBGeneticAlgorithm<TIndividual, TGene>\fP finishes its construction and initialisation 

.SH "Author"
.PP 
Generated automatically by Doxygen for PolyGenetic Algorithm from the source code\&.
