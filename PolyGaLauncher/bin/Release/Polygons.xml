<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Polygons</name>
    </assembly>
    <members>
        <member name="F:Polygons.Forms.HelperForms.DeleteFileConfirmation.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.HelperForms.DeleteFileConfirmation.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.HelperForms.DeleteFileConfirmation.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Polygons.Forms.HelperForms.ShapeNameChooserPrompt">
            <summary>
            Dialog box asking the user to specify a name for a polygon
            </summary>
        </member>
        <member name="F:Polygons.Forms.HelperForms.ShapeNameChooserPrompt.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.HelperForms.ShapeNameChooserPrompt.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.HelperForms.ShapeNameChooserPrompt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Polygons.Forms.HelperForms.ShapeOverwritePromptForm">
            <summary>
            Dialog box asking the user to confirm overwriting an existing file
            </summary>
        </member>
        <member name="F:Polygons.Forms.HelperForms.ShapeOverwritePromptForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.HelperForms.ShapeOverwritePromptForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.HelperForms.ShapeOverwritePromptForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Polygons.Forms.PolygonCreationForm">
            <summary>
            Form allowing user to specify and modify a custom shape
            </summary>
            <remarks>
            Provides following features (among others):
            <list type="bullet">
                <item><description>Define the shape of a polygon</description></item>
                <item><description>Rename created shapes</description></item>
                <item><description>Change color of a shape</description></item>
                <item><description>Limited file management of shapes</description></item>
            </list>
            </remarks>
            <summary>
            Form allowing user to specify and modify a custom shape
            </summary>
        </member>
        <member name="M:Polygons.Forms.PolygonCreationForm.#ctor">
            <summary>
            Form allowing user to specify and modify a custom shape
            </summary>
        </member>
        <member name="M:Polygons.Forms.PolygonCreationForm.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Safely close form on ESC press
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="P:Polygons.Forms.PolygonCreationForm.ShapeName">
            <summary>
            Name of the shape being currently edited
            </summary>
        </member>
        <member name="F:Polygons.Forms.PolygonCreationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Polygons.Forms.PolygonCreationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Polygons.Forms.PolygonCreationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Polygons.Paths">
            <summary>
            Provides methods for determining paths to various relevant locations and creating appropriate paths for specific files
            </summary>
        </member>
        <member name="M:Polygons.Paths.PolygonSavedShapesFolder">
            <summary>
            Folder where saved polygons are stored
            </summary>
            <returns>Path to save folder for polygons</returns>
        </member>
        <member name="M:Polygons.Paths.PolygonSavedShapesFolderNoBacklash">
            <summary>
            Folder where saved polygons are stored, final directory separator omitted
            </summary>
            <returns>Path to save folder for polygons without final directory separator</returns>
        </member>
        <member name="M:Polygons.Paths.LocalPath(System.String)">
            <summary>
            Local-path representation of a uriPath
            </summary>
            <param name="uriPath">uriPath to construct local path from</param>
            <returns>Local-path representation of uriPath</returns>
        </member>
        <member name="M:Polygons.Paths.SaveXmlPath(System.String)">
            <summary>
            Whole path to a file with a given name
            </summary>
            <param name="fileName">Name of the file to construct a path to</param>
            <returns></returns>
        </member>
        <member name="T:Polygons.Polygons">
            <summary>
            Provides methods for static generation of polygons
            </summary>
        </member>
        <member name="M:Polygons.Polygons.RandomPolygon">
            <summary>
            Generate a random polygon with a random number of vertices
            </summary>
            <returns>Random polygon</returns>
        </member>
        <member name="M:Polygons.Polygons.RandomPolygon(System.Int32)">
            <summary>
            Generate a random polygon with the specified number of vertices
            </summary>
            <param name="verticesCount">Number of vertices of the result polygon</param>
            <returns>Random polygon with 'n' vertices</returns>
        </member>
        <member name="T:Polygons.IPolygon">
            <summary>
            Represents a shape with a variable number of vertices, specific color and an optional name
            </summary>
        </member>
        <member name="P:Polygons.IPolygon.VerticesCount">
            <summary>
            Number of vertices
            </summary>
        </member>
        <member name="P:Polygons.IPolygon.OutlineColor">
            <summary>
            Color of the lines connecting vertices
            </summary>
        </member>
        <member name="P:Polygons.IPolygon.Vertices">
            <summary>
            List representation of the polygon's vertices
            </summary>
        </member>
        <member name="P:Polygons.IPolygon.Center">
            <summary>
            Point which is the average of the polygon's left/right-most and top/lower-most vertices
            </summary>
        </member>
        <member name="P:Polygons.IPolygon.Centroid">
            <summary>
            Point which is the average of every vertex's coordinates
            </summary>
        </member>
        <member name="T:Polygons.PolygonVisualizer">
            <summary>
            Provides static methods for drawing polygons
            </summary>
        </member>
        <member name="M:Polygons.PolygonVisualizer.Draw(Polygons.Polygon,System.Drawing.Graphics)">
            <summary>
            Draw a complete polygon
            </summary>
            <param name="p">Polygon to draw</param>
            <param name="g">Graphics object to be used to draw the polygon</param>
        </member>
        <member name="M:Polygons.PolygonVisualizer.DrawIncomplete(Polygons.Polygon,System.Drawing.Graphics)">
            <summary>
            Draw polygon without connection between the first and last vertex of the polygon
            </summary>
            <param name="p">Polygon to incompletely draw</param>
            <param name="g">Graphics object to be used to draw the polygon</param>
        </member>
        <member name="M:Polygons.PolygonVisualizer.DrawCenter(Polygons.Polygon,System.Drawing.Graphics)">
            <summary>
            Draw a mark in the position of the polygon's center
            </summary>
            <param name="p">Polygon whose center to draw</param>
            <param name="g">Graphics object to be used to mark the center</param>
        </member>
        <member name="M:Polygons.PolygonVisualizer.DrawCentroid(Polygons.Polygon,System.Drawing.Graphics)">
            <summary>
            Draw a mark in the position of the polygon's centroid
            </summary>
            <param name="p">Polygon whose center to draw</param>
            <param name="g">Graphics object to be used to mark the center</param>
        </member>
        <member name="M:Polygons.PolygonVisualizer.PolygonNormalizedToBox(Polygons.Polygon,System.Windows.Forms.PictureBox)">
            <summary>
            Create a new polygon with the properties of its template, vertices coordinates scaled to fit a PictureBox
            </summary>
            <param name="p">Polygon to normalize</param>
            <param name="normalizeTo">Picturebox whose bounds should be used for normalization calculations</param>
            <returns></returns>
        </member>
        <member name="M:Polygons.PolygonVisualizer.PolygonNormalizedToBox(Polygons.Polygon,System.Int32,System.Int32)">
            <summary>
            Create a new polygon with the properties of its template, vertices coordinates scaled to fit a container of specified dimensions
            </summary>
            <param name="p">Polygon to normalize</param>
            <param name="width">Width of the container</param>
            <param name="height">Height of the container</param>
            <returns></returns>
        </member>
        <member name="T:Polygons.PolygonXmlHandler">
            <summary>
            Provides static methods for loading and saving Polygons from/to .xml files
            </summary>
        </member>
        <member name="M:Polygons.PolygonXmlHandler.MakeFileWritable(System.String)">
            <summary>
            Checks if a file of same name already exists in specified location and removes any readonly accessors
            </summary>
            <param name="path">File path including the name of the potential file</param>
        </member>
        <member name="M:Polygons.PolygonXmlHandler.Save(Polygons.Polygon,System.String)">
            <summary>
            Saves polygon to an XML file to a specified folder and filename.
            </summary>
            <param name="p">Polygon to be saved</param>
            <param name="path">File path including the name of the output file</param>
        </member>
        <member name="M:Polygons.PolygonXmlHandler.SaveToDefaultFolder(Polygons.Polygon)">
            <summary>
            Save polygon as .xml to the application's default shapes saving folder
            </summary>
            <param name="p">Polygon to save</param>
        </member>
        <member name="M:Polygons.PolygonXmlHandler.Load(System.String)">
            <summary>
            Load an object from an XML file
            </summary>
            <param name="uriPath">Path to desired XML file</param>
            <returns>The object created from the XML file</returns>
        </member>
        <member name="T:Polygons.Polygon">
            <summary>
            Represents a shape with a variable number of vertices, specific color and an optional name
            </summary>
        </member>
        <member name="P:Polygons.Polygon.OutlineColor">
            <summary>
            Color of the connecting lines and points of the polygon
            </summary>
        </member>
        <member name="P:Polygons.Polygon.Name">
            <summary>
            Name assigned to the polygon
            </summary>
        </member>
        <member name="P:Polygons.Polygon.Vertices">
            <summary>
            All of the polygon's vertices represented as Points
            </summary>
        </member>
        <member name="P:Polygons.Polygon.VerticesCount">
            <summary>
            Number of vertices
            </summary>
        </member>
        <member name="P:Polygons.Polygon.Center">
            <summary>
            Point which is the average of the polygon's left/right-most and top/lower-most vertices
            </summary>
        </member>
        <member name="P:Polygons.Polygon.Centroid">
            <summary>
            Point which is the average of every vertex's coordinates
            </summary>
        </member>
        <member name="M:Polygons.Polygon.ShiftCenter(System.Drawing.Point)">
            <summary>
            Moves vertices of the polygon so that the specified point becomes the new center.
            </summary>
            <param name="newCenter">Location to become the new center after the shift</param>
        </member>
        <member name="M:Polygons.Polygon.ShiftedToCenter(System.Drawing.Point)">
            <summary>
            Representation of this polygon's vertices adjusted to a hypothetical center
            </summary>
            <param name="hypotheticalCenter"></param>
            <returns>List of polygon's vertices adjusted to center</returns>
        </member>
        <member name="M:Polygons.Polygon.ShiftCentroid(System.Drawing.Point)">
            <summary>
            Moves all of polygon's vertices so that they match a new centroid position
            </summary>
            <param name="newCentroid"></param>
        </member>
        <member name="M:Polygons.Polygon.ShiftedToCentroid(System.Drawing.Point)">
            <summary>
            Representation of this polygon's vertices adjusted to a hypothetical centroid
            </summary>
            <param name="hypotheticalCentroid"></param>
            <returns>List of polygon's vertices adjusted to centroid</returns>
        </member>
        <member name="M:Polygons.Polygon.ShiftUpperLeftCorner(System.Drawing.Point)">
            <summary>
            Change the coordinates of every vertex withotu distoring their relative positions.
            Left-most point of the polygon will share its X coordinate with the imaginary upper-left corner.
            Top-most point of the polygon will share its Y coordinate with the imaginary upper-left corner.
            </summary>
            <param name="shiftTo">Imaginary upper-left corner to shift to</param>
        </member>
        <member name="M:Polygons.Polygon.ShiftVertices(System.Int32,System.Int32)">
            <summary>
            Change the coordinates of every vertex without distorting their relative positions.
            </summary>
            <param name="dX">Shift on the horizontal axis</param>
            <param name="dY">Shift on the vertical axis</param>
        </member>
        <member name="M:Polygons.Polygon.ShiftedVertices(System.Collections.Generic.List{System.Drawing.Point},System.Int32,System.Int32)">
            <summary>
            Moves vertices to a new location (specified by amount of movement on X and Y axes.
            </summary>
            <param name="vertices">Vertices to be shifted</param>
            <param name="dX">Amount of movement on X axis</param>
            <param name="dY">Amount of movement on Y axis</param>
            <returns>Vertices adjusted to a new location</returns>
        </member>
        <member name="M:Polygons.Polygon.ShiftedVertices(System.Collections.Generic.List{System.Drawing.Point},System.Drawing.Point)">
            <summary>
            Moves vertices to a new location (specified by upper left corner of the whole shape).
            </summary>
            <param name="vertices">Vertices to be shifted</param>
            <param name="shiftToCorner">Upper left corner of the desired output</param>
            <returns>Vertices adjusted to a new location</returns>
        </member>
        <member name="M:Polygons.Polygon.GetScalingFactor(System.Int32,System.Int32)">
            <summary>
            Determine a proper resize value to fit polygon into a container of specified size
            </summary>
            <param name="normalizeToX">Horizontal size of container</param>
            <param name="normalizeToY">Vertical size of container</param>
            <returns></returns>
        </member>
        <member name="M:Polygons.Polygon.#ctor(System.Collections.Generic.List{System.Drawing.Point},System.Drawing.Color,System.String)">
            <summary>
            Construct polygon from a list of vertices, optionally specify its color and name
            </summary>
            <param name="vertices"></param>
            <param name="outlineColor"></param>
            <param name="name"></param>
        </member>
        <member name="M:Polygons.Polygon.Copy(Polygons.Polygon)">
            <summary>
            Create an identical copy of polygon
            </summary>
            <param name="original">Template polygon</param>
            <returns>Identical copy of original</returns>
        </member>
        <member name="M:Polygons.Polygon.#ctor(Polygons.Polygon,System.Double)">
            <summary>
            Construct polygon according to a template, adjust relative positions of vertices by a scaling factor
            </summary>
            <param name="original">Template polygon</param>
            <param name="resizeFactor"></param>
        </member>
        <member name="T:Polygons.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Polygons.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Polygons.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
